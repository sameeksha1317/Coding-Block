import java.util.*;

public class build_bst {
private class Node{
	int data;
	Node left;
	Node right;
	
}
private Node root;
public build_bst(int[] in) {
	this.root=construct(in,0,in.length-1);
}
private Node construct(int[] in,int low, int high) {
	if(low>high) {
		return null;
	}
	int mid=(low+high)/2;
	Node nn=new Node();
	nn.data=in[mid];
	nn.left=construct(in, low, mid-1);
	nn.right=construct(in,mid+1,high);
	return nn;
}
public void display() {
	display(this.root);
}
public void display(Node root) {
	if(root==null) {
		return;
	}
	System.out.print(root.data+" ");
	display(root.left);
	display(root.right);
}
public static void main(String[] args) {
	int t=scan.nextInt();
	while(t-->0) {
		int[] inorder=takeInput();
		build_bst tree=new build_bst(inorder);
		tree.display();
	}
}
static Scanner scan=new Scanner(System.in);
public static int[] takeInput() {
	int n=scan.nextInt();
	int[] array=new int[n];
	for(int i=0;i<array.length;i++) {
		array[i]=scan.nextInt();
	}
	return array;
}
}
